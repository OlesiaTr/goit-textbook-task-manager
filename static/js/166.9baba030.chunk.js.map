{"version":3,"file":"static/js/166.9baba030.chunk.js","mappings":"yOACA,EAA0B,sBAA1B,EAAuD,mBAAvD,EAAgF,kB,UCSnEA,EAAO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACnBC,GAAWC,EAAAA,EAAAA,MAUjB,OACE,iBAAKC,UAAWC,EAAhB,WAOE,cAAGD,UAAWC,EAAd,SAAyBJ,KACzB,mBAAQG,UAAWC,EAASC,QAfX,kBAAMJ,GAASK,EAAAA,EAAAA,IAAWP,GAA1B,EAejB,UACE,SAAC,MAAD,CAASQ,KAAM,SAItB,ECnCYC,EAAgB,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAhB,EACrBC,EAAiB,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,KAAhB,ECAnC,EAAuB,uBCIVC,EAAW,WACtB,IAAMJ,GAAQK,EAAAA,EAAAA,IAAYH,GAE1B,OACE,eAAIT,UAAWC,EAAf,SACGM,EAAMM,KAAI,gBAAGjB,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACT,yBACE,SAACF,EAAD,CAAMC,GAAIA,EAAIC,KAAMA,KADbD,EADA,KAOhB,EChBD,EAAuB,yBAAvB,EAAwD,0BAAxD,EAA2F,2BCG9EkB,EAAa,WACxB,IAAMhB,GAAWC,EAAAA,EAAAA,MAcjB,OACE,kBAAMC,UAAWC,EAAUc,SAbR,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACTtB,EAAOqB,EAAKE,SAASvB,KAAKwB,MAChC,GAAa,KAATxB,EAGF,OAFAC,GAASwB,EAAAA,EAAAA,IAAQzB,SACjBqB,EAAKK,QAGPC,MAAM,yCACP,EAGC,WACE,kBAAOC,KAAK,OAAOzB,UAAWC,KAC9B,mBAAQyB,KAAK,SAAS1B,UAAWC,EAAjC,wBAKL,ECnBc,SAAS0B,IACtB,IAAM7B,GAAWC,EAAAA,EAAAA,MACX6B,GAAYhB,EAAAA,EAAAA,IAAYP,GAM9B,OAJAwB,EAAAA,EAAAA,YAAU,WACR/B,GAASgC,EAAAA,EAAAA,MACV,GAAE,CAAChC,KAGF,iCACE,SAACiC,EAAA,EAAD,WACE,6CAEF,SAACjB,EAAD,KACA,yBAAMc,GAAa,4BACnB,SAACjB,EAAD,MAGL,C","sources":["webpack://react-homework-template/./src/components/Task/Task.module.css?22e8","components/Task/Task.js","redux/tasks/selectors.js","webpack://react-homework-template/./src/components/TaskList/TaskList.module.css?079b","components/TaskList/TaskList.js","webpack://react-homework-template/./src/components/TaskEditor/TaskEditor.module.css?47aa","components/TaskEditor/TaskEditor.js","pages/Tasks.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Task_wrapper__zvx3s\",\"text\":\"Task_text__IwwM2\",\"btn\":\"Task_btn__5Zeie\",\"checkbox\":\"Task_checkbox__XsrPA\"};","// Core\nimport { useDispatch } from 'react-redux';\nimport { deleteTask } from 'redux/tasks/operations';\n\n// Utils\nimport { MdClose } from 'react-icons/md';\n\n// Styles\nimport css from './Task.module.css';\n\nexport const Task = ({ id, text }) => {\n  const dispatch = useDispatch();\n\n  // Call the action generator and pass the task ID\n  // Send the result - task delete action\n  const handleDelete = () => dispatch(deleteTask(id));\n\n  // Call the action generator and pass the task ID\n  // Send the result - action to switch task status\n  // const handleToggle = () => dispatch(toggleCompleted(task));\n\n  return (\n    <div className={css.wrapper}>\n      {/* <input\n        type=\"checkbox\"\n        className={css.checkbox}\n        checked={task.completed}\n        onChange={handleToggle}\n      /> */}\n      <p className={css.text}>{text}</p>\n      <button className={css.btn} onClick={handleDelete}>\n        <MdClose size={24} />\n      </button>\n    </div>\n  );\n};\n","export const selectLoading = state => state.tasks.loading;\nexport const selectAllTasks = state => state.tasks.items;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"TaskList_list__Q1M-x\"};","import { useSelector } from 'react-redux';\nimport { Task } from '../Task/Task';\nimport { selectAllTasks } from 'redux/tasks/selectors';\nimport css from './TaskList.module.css';\n\nexport const TaskList = () => {\n  const tasks = useSelector(selectAllTasks);\n\n  return (\n    <ul className={css.list}>\n      {tasks.map(({ id, text }) => (\n        <li key={id}>\n          <Task id={id} text={text} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"TaskEditor_form__NXWha\",\"input\":\"TaskEditor_input__WXNoz\",\"button\":\"TaskEditor_button__qGfcX\"};","import { useDispatch } from 'react-redux';\nimport { addTask } from 'redux/tasks/operations';\nimport css from './TaskEditor.module.css';\n\nexport const TaskEditor = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const text = form.elements.text.value;\n    if (text !== '') {\n      dispatch(addTask(text));\n      form.reset();\n      return;\n    }\n    alert('Task cannot be empty. Enter some text!');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <input name=\"text\" className={css.input} />\n      <button type=\"submit\" className={css.button}>\n        Add task\n      </button>\n    </form>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { TaskList } from 'components/TaskList/TaskList';\nimport { TaskEditor } from 'components/TaskEditor/TaskEditor';\nimport { fetchTasks } from 'redux/tasks/operations';\nimport { selectLoading } from 'redux/tasks/selectors';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchTasks());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your tasks</title>\n      </Helmet>\n      <TaskEditor />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <TaskList />\n    </>\n  );\n}\n"],"names":["Task","id","text","dispatch","useDispatch","className","css","onClick","deleteTask","size","selectLoading","state","tasks","loading","selectAllTasks","items","TaskList","useSelector","map","TaskEditor","onSubmit","e","preventDefault","form","currentTarget","elements","value","addTask","reset","alert","name","type","Tasks","isLoading","useEffect","fetchTasks","Helmet"],"sourceRoot":""}